This is a framework for writing bots that play Hanabi.
http://boardgamegeek.com/boardgame/98778/hanabi

It is very much a work in progress.

Typing "make" will build all of the bots that the Makefile knows about.

Typing "make FAST=1" will use faster "release build" options. This includes
enabling parallel processing with OpenMP, unless you also pass OPENMP=0.

./run_BlindBot
  (blindly plays a random card each time: avg score 1.26-)
./run_SimpleBot
  (hints about playable cards: avg score 17.89-)
./run_ValueBot
  (also warns about valuable cards: avg score 18.58+)
./run_HolmesBot
  (also performs inferences: avg score 19.51+, or 19.56+ using mulligans)
./run_SmartBot
  (prefers to play cards its partners don't know it knows: avg score 19.67+, or 19.75- using mulligans)
./run_CheatBot
  (secretly radios its partners: avg score 24.67-)

The interesting thing about CheatBot is that the perfect strategy is
difficult to compute, even when hints are redundant. Also note that
24.89 is a hard upper bound on the average score in a three-player game,
because the last one or two cards in the deck might be 5s.

Notice that CheatBot must be built with OPENMP=0, since it uses
global variables to communicate with its partners. However, it is
also very fast, so this isn't much of a disadvantage.
